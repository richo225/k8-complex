# Build images
steps:
- name: 'gcr.io/cloud-builders/docker'
  args:
  - 'build'
  - '-t'
  - 'gcr.io/$PROJECT_ID/multi-client'
  - '-f'
  - './client/Dockerfile'
  - './client'

- name: 'gcr.io/cloud-builders/docker'
  waitFor: ['-']
  args:
  - 'build'
  - '-t'
  - 'gcr.io/$PROJECT_ID/multi-server'
  - '-f'
  - './server/Dockerfile'
  - './server'

- name: 'gcr.io/cloud-builders/docker'
  waitFor: ['-']
  args:
  - 'build'
  - '-t'
  - 'gcr.io/$PROJECT_ID/multi-worker'
  - '-f'
  - './worker/Dockerfile'
  - './worker'


# Push built images to gcp container registry
- name: 'gcr.io/cloud-builders/docker'
  args:
  - 'push'
  - 'gcr.io/$PROJECT_ID/multi-client'

- name: 'gcr.io/cloud-builders/docker'
  args:
  - 'push'
  - 'gcr.io/$PROJECT_ID/multi-server'

- name: 'gcr.io/cloud-builders/docker'
  args:
  - 'push'
  - 'gcr.io/$PROJECT_ID/multi-worker'


# Apply kube config files to cluster
- name: 'gcr.io/cloud-builders/kubectl'
  args: ['apply', './k8s']


# Set image for deployment
- name: 'gcr.io/cloud-builders/kubectl'
  args:
  - 'set'
  - 'image'
  - 'deployments/server-deployment'
  - 'server=multi-server'

- name: 'gcr.io/cloud-builders/kubectl'
  args:
  - 'set'
  - 'image'
  - 'deployments/client-deployment'
  - 'client=multi-client'

- name: 'gcr.io/cloud-builders/kubectl'
  args:
  - 'set'
  - 'image'
  - 'deployments/worker-deployment'
  - 'worker=multi-worker'